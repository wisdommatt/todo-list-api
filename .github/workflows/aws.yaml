name: AWS Setup / Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup env file
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_ECR_URI: ${{ secrets.ECR_URI }}
        envkey_ECR_REGION: ${{ secrets.ECR_REGION }}
        envkey_ECR_USERNAME: ${{ secrets.ECR_USERNAME }}
        envkey_ECR_PASSWORD: ${{ secrets.ECR_PASSWORD }}
        envkey_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        envkey_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        envkey_MONGODB_URI: ${{ secrets.MONGODB_URI }}
        file_name: .env
        fail_on_empty: true

    - name: Deploy Docker Image
      shell: bash
      run: |
        cat .env
        dotenv --version

        echo "AWS setup"

        echo "$(date) checking if aws cli is installed"
        if ! [ -x "$(command -v aws)" ]; then
            echo "$(date) installing aws cli"
            mkdir downloads
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "downloads/awscliv2.zip"
            unzip -u downloads/awscliv2.zip
            ./downloads/aws/install -i /usr/local/aws-cli -b /usr/local/bin
            rm -r downloads/aws
            rm downloads/awscliv2.zip
            echo "$(date) aws cli installed, version: $(aws --version)"
        fi

        echo "$(date) creating aws profile"
        mkdir ~/.aws
        echo "[default]
        aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

        echo "$(date) aws ecr docker login"
        aws ecr get-login-password --region ${{ secrets.ECR_REGION }} | docker login --username ${{ secrets.ECR_USERNAME }} --password-stdin ${{ secrets.ECR_PASSWORD }}

        ls -a

        cat .env

        echo "$(date) - building docker image"
        docker build -t todo-list-api .

        echo "$(date) - tagging docker image - $ECR_URI"
        docker tag todo-list-api:latest ${ECR_URI}:latest

        echo "$(date) - pushing docker image to ECR"
        docker push ${ECR_URI}:latest
